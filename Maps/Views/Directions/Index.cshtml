@model Maps.ViewModels.DirectionViewModel
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<form id="locationInfo">
    <div class="form-group">
        <label>Location</label>
        <input id="txtLocation" name="txtLocation" type="text" value="" class="form-control" />
    </div>

    <div class="form-group">
        <label>Destination</label>
        <input id="txtDestination" name="txtDestination" type="text" value="" class="form-control" />
    </div>

    <div class="row">
        <div class="col-md-4 col-sm-4">
            <ul id="ulDistanceTime" class="list-group"></ul>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4 col-sm-4">
            <ul id="ulTraffic" class="list-group">Traffic:</ul>
        </div>
    </div>

    <button class="btn btn-primary">Go</button>
</form>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false&libraries=places&key=AIzaSyDLh33XP773XFGjCjEoYUHEOUrhX91eeCI"></script>  
    <script type="text/javascript">
        var locationAddress = "";
        var locationLatitude = "";
        var locationLongitude = "";
        var destinationAddress = "";
        var destinationLatitude = "";
        var destinationLongitude = "";
        google.maps.event.addDomListener(window, 'load', function () {
            var placesLocation = new google.maps.places.Autocomplete(document.getElementById('txtLocation'));
            var placesDestination = new google.maps.places.Autocomplete(document.getElementById('txtDestination'));
            google.maps.event.addListener(placesLocation, 'place_changed', function () {
                var place = placesLocation.getPlace();
                locationAddress = place.formatted_address;
                locationLatitude = place.geometry.location.lat();
                locationLongitude = place.geometry.location.lng();
            });

            google.maps.event.addListener(placesDestination, 'place_changed', function () {
                var place = placesDestination.getPlace();
                destinationAddress = place.formatted_address;
                destinationLatitude = place.geometry.location.lat();
                destinationLongitude = place.geometry.location.lng();
            });
        });

        $(document).ready(function () {
            $("#locationInfo").submit(function (event) {
                event.preventDefault();
                $.ajax({
                    url: "/api/Directions",
                    method: "Get",
                    data: {
                        location: locationAddress,
                        destination: destinationAddress,
                        locationLatitude: locationLatitude,
                        locationLongitude: locationLongitude,
                        destinationLatitude :destinationLatitude,
                        destinationLongitude: destinationLongitude
                    },
                    contentType: "application/json",
                    dataType: "json",
                    success: function (data) {
                        var obj = JSON.parse(data)
                        var distance = obj.rows[0].elements[0].distance.text
                        var duration = obj.rows[0].elements[0].duration.text
                        $("#ulDistanceTime").empty()
                        $("#ulDistanceTime").append("<li class='list-group-item'>Distance: " + distance + "</li>")
                        $("#ulDistanceTime").append("<li class='list-group-item'>Duration: " + duration + "</li>")

                        $("#ulTraffic").empty()
                        if (obj.resourceSets.length === 0 || obj.resourceSets[0].resources.length === 0)
                            return $("#ulTraffic").append("<li class='list-group-item'>No traffic information available for this regen</li>")

                        $.each(obj.resourceSets[0].resources, function (index, resource) {
                            $("#ulTraffic").append("<li class='list-group-item'>" + resource.description + "</li>")
                        })
                    },
                    error: function (error) {

                    }
                });
            });
        });

</script>

}

